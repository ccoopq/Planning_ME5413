## *********************************************************
##
## File autogenerated for the spinnaker_camera_driver package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 246, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 291, 'description': 'User controlled acquisition frame rate in Hertz (frames per second).', 'max': 120.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'acquisition_frame_rate', 'edit_method': '', 'default': 10.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Enables manual (True) and automatic (False) control of the aquisition frame rate', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'acquisition_frame_rate_enable', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Sets the operation mode of the Exposure (Timed or TriggerWidth).', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'exposure_mode', 'edit_method': '', 'default': 'Timed', 'level': 1, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': "Sets the automatic exposure mode to: 'Off', 'Once' or 'Continuous'", 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'exposure_auto', 'edit_method': "{'enum_description': 'Automatic mode: Off, Once, or Continuous.', 'enum': [{'srcline': 83, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoOff'}, {'srcline': 84, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoOnce'}, {'srcline': 85, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoContinuous'}]}", 'default': 'Continuous', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Exposure time in microseconds when Exposure Mode is Timed and Exposure Auto is not Continuous.', 'max': 3000000.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'exposure_time', 'edit_method': '', 'default': 100.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Upper Limit on Shutter Speed.', 'max': 3000000.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_exposure_time_upper_limit', 'edit_method': '', 'default': 5000.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Selects which gain to control. The All selection is a total amplification across all channels.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'gain_selector', 'edit_method': '', 'default': 'All', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Gain state control. (Off, Once, Continuous)', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_gain', 'edit_method': "{'enum_description': 'Automatic mode: Off, Once, or Continuous.', 'enum': [{'srcline': 83, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoOff'}, {'srcline': 84, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoOnce'}, {'srcline': 85, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoContinuous'}]}", 'default': 'Continuous', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Controls the amplification of the video signal in dB.', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'gain', 'edit_method': '', 'default': 0.0, 'level': 0, 'min': -10.0, 'type': 'double'}, {'srcline': 291, 'description': 'Also known as Black level offset. Refers to the output of the camera when not illuminated.', 'max': 10.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'brightness', 'edit_method': '', 'default': 1.7, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Enables/disables the sharpening feature. Sharpening is disabled by default.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'sharpening_enable', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Enables/disables the auto sharpening feature.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_sharpness', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Controls the amount to sharpen a signal.', 'max': 4095.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'sharpness', 'edit_method': '', 'default': 1024.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Controls the minimum intensity gradient change to invoke sharpening. ', 'max': 0.25, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'sharpening_threshold', 'edit_method': '', 'default': 0.1, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Enables/disables Saturation adjustment..', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'saturation_enable', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Saturation.', 'max': 399.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'saturation', 'edit_method': '', 'default': 100.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Enables/disables gamma correction.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'gamma_enable', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Controls the gamma correction of pixel intensity.', 'max': 4.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'gamma', 'edit_method': '', 'default': 1.0, 'level': 0, 'min': 0.5, 'type': 'double'}, {'srcline': 291, 'description': 'White Balance compensates for color shifts caused by different lighting conditions.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_white_balance', 'edit_method': "{'enum_description': 'Automatic mode: Off, Once, or Continuous.', 'enum': [{'srcline': 83, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoOff'}, {'srcline': 84, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoOnce'}, {'srcline': 85, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'AutoContinuous'}]}", 'default': 'Off', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'White balance blue component.', 'max': 1023.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'white_balance_blue_ratio', 'edit_method': '', 'default': 800.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'White balance red component.', 'max': 1023.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'white_balance_red_ratio', 'edit_method': '', 'default': 550.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Width of the image provided by the device (in pixels).', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_roi_width', 'edit_method': '', 'default': 0, 'level': 1, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Height of the image provided by the device (in pixels).', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_roi_height', 'edit_method': '', 'default': 0, 'level': 1, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Horizontal offset from the origin to the ROI (in pixels).', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_x_offset', 'edit_method': '', 'default': 0, 'level': 1, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Vertical offset from the origin to the ROI (in pixels).', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_y_offset', 'edit_method': '', 'default': 0, 'level': 1, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Horizontal Binning.', 'max': 8, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_x_binning', 'edit_method': '', 'default': 1, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 291, 'description': 'Vertical Binning.', 'max': 8, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_y_binning', 'edit_method': '', 'default': 1, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 291, 'description': 'Horizontal Decimation.', 'max': 8, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_x_decimation', 'edit_method': '', 'default': 1, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 291, 'description': 'Vertical Decimation.', 'max': 8, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_y_decimation', 'edit_method': '', 'default': 1, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 291, 'description': 'Horizontal Reverse.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_x_reverse', 'edit_method': '', 'default': False, 'level': 1, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Vertical Reverse.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_y_reverse', 'edit_method': '', 'default': False, 'level': 1, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Image Color coding', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'image_format_color_coding', 'edit_method': "{'enum_description': 'Image Color Coding: Format of the pixel provided by the camera.', 'enum': [{'srcline': 137, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono8'}, {'srcline': 138, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono16'}, {'srcline': 140, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'RGB8Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'RGB8Packed'}, {'srcline': 142, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR8'}, {'srcline': 143, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG8'}, {'srcline': 144, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB8'}, {'srcline': 145, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG8'}, {'srcline': 147, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR16', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR16'}, {'srcline': 148, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG16', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG16'}, {'srcline': 149, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB16', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB16'}, {'srcline': 150, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG16', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG16'}, {'srcline': 152, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Mono12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono12Packed'}, {'srcline': 154, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR12Packed'}, {'srcline': 155, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG12Packed'}, {'srcline': 156, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB12Packed'}, {'srcline': 157, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG12Packed'}, {'srcline': 159, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'YUV411Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'YUV411Packed'}, {'srcline': 160, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'YUV422Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'YUV422Packed'}, {'srcline': 161, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'YUV444Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'YUV444Packed'}, {'srcline': 163, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Mono12p', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono12p'}, {'srcline': 165, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR12p', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR12p'}, {'srcline': 166, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG12p', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG12p'}, {'srcline': 167, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB12p', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB12p'}, {'srcline': 168, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG12p', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG12p'}, {'srcline': 171, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'YCbCr8', 'ctype': 'std::string', 'type': 'str', 'name': 'YCbCr8'}, {'srcline': 172, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'YCbCr422_8', 'ctype': 'std::string', 'type': 'str', 'name': 'YCbCr422_8'}, {'srcline': 173, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'YCbCr411_8', 'ctype': 'std::string', 'type': 'str', 'name': 'YCbCr411_8'}, {'srcline': 175, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BGR8', 'ctype': 'std::string', 'type': 'str', 'name': 'BGR8'}, {'srcline': 176, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'BGRa8', 'ctype': 'std::string', 'type': 'str', 'name': 'BGRa8'}]}", 'default': 'Mono8', 'level': 1, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Controls whether the image processing core is used for optional pixel format mode', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'isp_enable', 'edit_method': '', 'default': True, 'level': 1, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Enable the external triggering mode.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'enable_trigger', 'edit_method': '', 'default': 'Off', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Selects the type of trigger to configure.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'trigger_selector', 'edit_method': "{'enum_description': 'Trigger Types', 'enum': [{'srcline': 192, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionStart', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionStart'}, {'srcline': 193, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'FrameStart', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameStart'}, {'srcline': 194, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'FrameBurstStart', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameBurstStart'}]}", 'default': 'FrameStart', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Trigger Activiation Modes', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'trigger_activation_mode', 'edit_method': "{'enum_description': 'Trigger Activation Modes', 'enum': [{'srcline': 201, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'LevelLow', 'ctype': 'std::string', 'type': 'str', 'name': 'LevelLow'}, {'srcline': 202, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'LevelHigh', 'ctype': 'std::string', 'type': 'str', 'name': 'LevelHigh'}, {'srcline': 203, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'FallingEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'FallingEdge'}, {'srcline': 204, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'RisingEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'RisingEdge'}, {'srcline': 205, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'AnyEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'AnyEdge'}]}", 'default': 'FallingEdge', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Trigger Sources', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'trigger_source', 'edit_method': "{'enum_description': 'Software and Hardware Trigger Sources', 'enum': [{'srcline': 210, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Software', 'ctype': 'std::string', 'type': 'str', 'name': 'Software'}, {'srcline': 211, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line0', 'ctype': 'std::string', 'type': 'str', 'name': 'Line0'}, {'srcline': 212, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line1', 'ctype': 'std::string', 'type': 'str', 'name': 'Line1'}, {'srcline': 213, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line2', 'ctype': 'std::string', 'type': 'str', 'name': 'Line2'}, {'srcline': 214, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line3', 'ctype': 'std::string', 'type': 'str', 'name': 'Line3'}, {'srcline': 216, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput0', 'ctype': 'std::string', 'type': 'str', 'name': 'UserOutput0'}, {'srcline': 217, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput1', 'ctype': 'std::string', 'type': 'str', 'name': 'UserOutput1'}, {'srcline': 218, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput2', 'ctype': 'std::string', 'type': 'str', 'name': 'UserOutput2'}, {'srcline': 219, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput3', 'ctype': 'std::string', 'type': 'str', 'name': 'UserOutput3'}, {'srcline': 221, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Counter0Start', 'ctype': 'std::string', 'type': 'str', 'name': 'Counter0Start'}, {'srcline': 222, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Counter1Start', 'ctype': 'std::string', 'type': 'str', 'name': 'Counter1Start'}, {'srcline': 223, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Counter0End', 'ctype': 'std::string', 'type': 'str', 'name': 'Counter0End'}, {'srcline': 224, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Counter1End', 'ctype': 'std::string', 'type': 'str', 'name': 'Counter1End'}, {'srcline': 226, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'LogicBlock0', 'ctype': 'std::string', 'type': 'str', 'name': 'LogicBlock0'}, {'srcline': 227, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'LogicBlock1', 'ctype': 'std::string', 'type': 'str', 'name': 'LogicBlock1'}, {'srcline': 228, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Action0', 'ctype': 'std::string', 'type': 'str', 'name': 'Action0'}]}", 'default': 'Line0', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Trigger Overlap Modes', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'trigger_overlap_mode', 'edit_method': "{'enum_description': 'Trigger Overlap Modes', 'enum': [{'srcline': 239, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 240, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'ReadOut', 'ctype': 'std::string', 'type': 'str', 'name': 'ReadOut'}, {'srcline': 241, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'PreviousFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'PreviousFrame'}]}", 'default': 'ReadOut', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Line Sources', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'line_source', 'edit_method': "{'enum_description': 'Selects which internal acquisition or I/O source signal to output on the selected line. LineMode must be Output', 'enum': [{'srcline': 252, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_Off'}, {'srcline': 254, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line0', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_Line0'}, {'srcline': 255, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line1', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_Line1'}, {'srcline': 256, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line2', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_Line2'}, {'srcline': 257, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line3', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_Line3'}, {'srcline': 259, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput0', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_UserOutput0'}, {'srcline': 260, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput1', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_UserOutput1'}, {'srcline': 261, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput2', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_UserOutput2'}, {'srcline': 262, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'UserOutput3', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_UserOutput3'}, {'srcline': 264, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Counter0Active', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_Counter0Active'}, {'srcline': 265, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Counter1Active', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_Counter1Active'}, {'srcline': 266, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'LogicBlock0', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_LogicBlock0'}, {'srcline': 267, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'LogicBlock1', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_LogicBlock1'}, {'srcline': 269, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'ExposureActive', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_ExposureActive'}, {'srcline': 270, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'FrameTriggerWait', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_FrameTriggerWait'}, {'srcline': 271, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'SerialPort0', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_SerialPort0'}, {'srcline': 272, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'PPSSignal', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_PPSSignal'}, {'srcline': 273, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'AllPixel', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_AllPixel'}, {'srcline': 274, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'AnyPixel', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSource_AnyPixel'}]}", 'default': 'Off', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Line Selector', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'line_selector', 'edit_method': "{'enum_description': 'Selects the physical line (or pin) of the external device connector to configure.', 'enum': [{'srcline': 280, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line0', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSelector_Line0'}, {'srcline': 281, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line1', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSelector_Line1'}, {'srcline': 282, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line2', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSelector_Line2'}, {'srcline': 283, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Line3', 'ctype': 'std::string', 'type': 'str', 'name': 'LineSelector_Line3'}]}", 'default': 'Line0', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Line Mode', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'line_mode', 'edit_method': "{'enum_description': 'Line Mode', 'enum': [{'srcline': 289, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Input', 'ctype': 'std::string', 'type': 'str', 'name': 'Input'}, {'srcline': 290, 'description': '', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Output', 'ctype': 'std::string', 'type': 'str', 'name': 'Output'}]}", 'default': 'Input', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Auto exposure ROI X offset.', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_exposure_roi_offset_x', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Auto exposure ROI Y offset.', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_exposure_roi_offset_y', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Auto exposure ROI width.', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_exposure_roi_width', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Auto exposure ROI height.', 'max': 65535, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_exposure_roi_height', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 291, 'description': 'Auto exposure lighting mode.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'auto_exposure_lighting_mode', 'edit_method': "{'enum_description': 'Auto algorithms lighting modes', 'enum': [{'srcline': 303, 'description': 'Normal', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Normal', 'ctype': 'std::string', 'type': 'str', 'name': 'Normal'}, {'srcline': 304, 'description': 'Front Lighting', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Frontlight', 'ctype': 'std::string', 'type': 'str', 'name': 'Frontlight'}, {'srcline': 305, 'description': 'Back Lighting', 'srcfile': '/media/ikun/T7/task3/ME5413_Planning_Project-main/src/flir_camera_driver-kinetic-devel/spinnaker_camera_driver/cfg/Spinnaker.cfg', 'cconsttype': 'const char * const', 'value': 'Backlight', 'ctype': 'std::string', 'type': 'str', 'name': 'Backlight'}]}", 'default': 'Normal', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 291, 'description': 'Time offset to add to image time stamps.', 'max': 5.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'time_offset', 'edit_method': '', 'default': 0.0, 'level': 0, 'min': -5.0, 'type': 'double'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

Spinnaker_AutoOff = 'Off'
Spinnaker_AutoOnce = 'Once'
Spinnaker_AutoContinuous = 'Continuous'
Spinnaker_Mono8 = 'Mono8'
Spinnaker_Mono16 = 'Mono16'
Spinnaker_RGB8Packed = 'RGB8Packed'
Spinnaker_BayerGR8 = 'BayerGR8'
Spinnaker_BayerRG8 = 'BayerRG8'
Spinnaker_BayerGB8 = 'BayerGB8'
Spinnaker_BayerBG8 = 'BayerBG8'
Spinnaker_BayerGR16 = 'BayerGR16'
Spinnaker_BayerRG16 = 'BayerRG16'
Spinnaker_BayerGB16 = 'BayerGB16'
Spinnaker_BayerBG16 = 'BayerBG16'
Spinnaker_Mono12Packed = 'Mono12Packed'
Spinnaker_BayerGR12Packed = 'BayerGR12Packed'
Spinnaker_BayerRG12Packed = 'BayerRG12Packed'
Spinnaker_BayerGB12Packed = 'BayerGB12Packed'
Spinnaker_BayerBG12Packed = 'BayerBG12Packed'
Spinnaker_YUV411Packed = 'YUV411Packed'
Spinnaker_YUV422Packed = 'YUV422Packed'
Spinnaker_YUV444Packed = 'YUV444Packed'
Spinnaker_Mono12p = 'Mono12p'
Spinnaker_BayerGR12p = 'BayerGR12p'
Spinnaker_BayerRG12p = 'BayerRG12p'
Spinnaker_BayerGB12p = 'BayerGB12p'
Spinnaker_BayerBG12p = 'BayerBG12p'
Spinnaker_YCbCr8 = 'YCbCr8'
Spinnaker_YCbCr422_8 = 'YCbCr422_8'
Spinnaker_YCbCr411_8 = 'YCbCr411_8'
Spinnaker_BGR8 = 'BGR8'
Spinnaker_BGRa8 = 'BGRa8'
Spinnaker_AcquisitionStart = 'AcquisitionStart'
Spinnaker_FrameStart = 'FrameStart'
Spinnaker_FrameBurstStart = 'FrameBurstStart'
Spinnaker_LevelLow = 'LevelLow'
Spinnaker_LevelHigh = 'LevelHigh'
Spinnaker_FallingEdge = 'FallingEdge'
Spinnaker_RisingEdge = 'RisingEdge'
Spinnaker_AnyEdge = 'AnyEdge'
Spinnaker_Software = 'Software'
Spinnaker_Line0 = 'Line0'
Spinnaker_Line1 = 'Line1'
Spinnaker_Line2 = 'Line2'
Spinnaker_Line3 = 'Line3'
Spinnaker_UserOutput0 = 'UserOutput0'
Spinnaker_UserOutput1 = 'UserOutput1'
Spinnaker_UserOutput2 = 'UserOutput2'
Spinnaker_UserOutput3 = 'UserOutput3'
Spinnaker_Counter0Start = 'Counter0Start'
Spinnaker_Counter1Start = 'Counter1Start'
Spinnaker_Counter0End = 'Counter0End'
Spinnaker_Counter1End = 'Counter1End'
Spinnaker_LogicBlock0 = 'LogicBlock0'
Spinnaker_LogicBlock1 = 'LogicBlock1'
Spinnaker_Action0 = 'Action0'
Spinnaker_Off = 'Off'
Spinnaker_ReadOut = 'ReadOut'
Spinnaker_PreviousFrame = 'PreviousFrame'
Spinnaker_LineSource_Off = 'Off'
Spinnaker_LineSource_Line0 = 'Line0'
Spinnaker_LineSource_Line1 = 'Line1'
Spinnaker_LineSource_Line2 = 'Line2'
Spinnaker_LineSource_Line3 = 'Line3'
Spinnaker_LineSource_UserOutput0 = 'UserOutput0'
Spinnaker_LineSource_UserOutput1 = 'UserOutput1'
Spinnaker_LineSource_UserOutput2 = 'UserOutput2'
Spinnaker_LineSource_UserOutput3 = 'UserOutput3'
Spinnaker_LineSource_Counter0Active = 'Counter0Active'
Spinnaker_LineSource_Counter1Active = 'Counter1Active'
Spinnaker_LineSource_LogicBlock0 = 'LogicBlock0'
Spinnaker_LineSource_LogicBlock1 = 'LogicBlock1'
Spinnaker_LineSource_ExposureActive = 'ExposureActive'
Spinnaker_LineSource_FrameTriggerWait = 'FrameTriggerWait'
Spinnaker_LineSource_SerialPort0 = 'SerialPort0'
Spinnaker_LineSource_PPSSignal = 'PPSSignal'
Spinnaker_LineSource_AllPixel = 'AllPixel'
Spinnaker_LineSource_AnyPixel = 'AnyPixel'
Spinnaker_LineSelector_Line0 = 'Line0'
Spinnaker_LineSelector_Line1 = 'Line1'
Spinnaker_LineSelector_Line2 = 'Line2'
Spinnaker_LineSelector_Line3 = 'Line3'
Spinnaker_Input = 'Input'
Spinnaker_Output = 'Output'
Spinnaker_Normal = 'Normal'
Spinnaker_Frontlight = 'Frontlight'
Spinnaker_Backlight = 'Backlight'
